diff --git a/packages/pack/bin/protonPack.js b/packages/pack/bin/protonPack.js
index 55715b89d..c87879ad4 100755
--- a/packages/pack/bin/protonPack.js
+++ b/packages/pack/bin/protonPack.js
@@ -81,7 +81,7 @@ addGlobalOptions(program.command('build').description('create an optimized produ
         const outputPath = path.resolve('./dist');
         await commandWithLog(`rm -rf ${outputPath}`);
         await commandWithLog(
-            `${require.resolve('webpack-cli/bin/cli.js')} --progress --output-path=${outputPath} ${webpackArgs}`,
+            `${require.resolve('webpack-cli/bin/cli.js')} --output-path=${outputPath} ${webpackArgs}`,
             {
                 stdio: 'inherit',
             }

diff --git a/applications/account/src/app/Setup.tsx b/applications/account/src/app/Setup.tsx
index 19828d5..0d7ce23 100644
--- a/applications/account/src/app/Setup.tsx
+++ b/applications/account/src/app/Setup.tsx
@@ -4,14 +4,28 @@ import { locales } from '@proton/shared/lib/i18n/locales';
 import { PublicAuthenticationStore, PrivateAuthenticationStore, useAuthentication } from '@proton/components';

 import PrivateApp from './content/PrivateApp';
-import PublicApp from './content/PublicApp';
+
+const RedirectToOrigin = () => {
+    const timeoutMs = 5000;
+    const { origin: destination } = window.location;
+    const message = `Redirecting to "${destination}" in ${timeoutMs}ms`;
+    let timeoutId: undefined | ReturnType<typeof setTimeout>;
+    React.useEffect(() => {
+        timeoutId = setTimeout(
+            () => window.location.replace(destination),
+            timeoutMs
+        );
+        return () => clearTimeout(timeoutId);
+    });
+    return React.createElement(React.Fragment, null, message);
+};

 const Setup = () => {
-    const { UID, login, logout } = useAuthentication() as PublicAuthenticationStore & PrivateAuthenticationStore;
+    const { UID, logout } = useAuthentication() as PublicAuthenticationStore & PrivateAuthenticationStore;
     if (UID) {
         return <PrivateApp locales={locales} onLogout={logout} />;
     }
-    return <PublicApp locales={locales} onLogin={login} />;
+    return <RedirectToOrigin />;
 };

 export default Setup;

diff --git a/applications/account/src/app/content/MainContainer.tsx b/applications/account/src/app/content/MainContainer.tsx
index 73380a9..75922b7 100644
--- a/applications/account/src/app/content/MainContainer.tsx
+++ b/applications/account/src/app/content/MainContainer.tsx
@@ -43,7 +43,7 @@ const MainContainer = () => {
         setExpand(false);
     }, [location.pathname, location.hash]);

-    const app = getAppFromPathnameSafe(location.pathname);
+    const app = getAppFromPathnameSafe(window.location.pathname);

     if (!app) {
         return <Redirect to={DEFAULT_REDIRECT} />;
