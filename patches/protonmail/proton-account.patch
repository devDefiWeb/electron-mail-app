diff --git a/node_modules/proton-bundler/scripts/validateBuild.sh b/node_modules/proton-bundler/scripts/validateBuild.sh
index 6eef523..b016a0d 100755
--- a/node_modules/proton-bundler/scripts/validateBuild.sh
+++ b/node_modules/proton-bundler/scripts/validateBuild.sh
@@ -58,7 +58,7 @@ function main {
   fi;

   if [ "$hasSourceMap" -eq 0 ]; then
-    hasError=true;
+    # hasError=true;
     echo "[error] no SourceMaps found inside the directory: $OUTPUT_DIR";
   fi;

diff --git a/src/app/Setup.tsx b/src/app/Setup.tsx
index 9d333b8..2921f49 100644
--- a/src/app/Setup.tsx
+++ b/src/app/Setup.tsx
@@ -4,14 +4,29 @@ import locales from 'proton-shared/lib/i18n/locales';
 import { PublicAuthenticationStore, PrivateAuthenticationStore, useAuthentication } from 'react-components';

 import PrivateApp from './content/PrivateApp';
-import PublicApp from './content/PublicApp';
+
+const RedirectToOrigin = () => {
+    const timeoutMs = 5000;
+    const {origin: destination} = window.location;
+    const message = `Redirecting to "${destination}" in ${timeoutMs}ms`;
+    let timeoutId: undefined | ReturnType<typeof setTimeout>;
+    React.useEffect(() => {
+        timeoutId = setTimeout(
+            () => window.location.replace(destination),
+            timeoutMs,
+        );
+        return () => clearTimeout(timeoutId);
+    });
+    return React.createElement(React.Fragment, null, message);
+}

 const Setup = () => {
-    const { UID, login, logout } = useAuthentication() as PublicAuthenticationStore & PrivateAuthenticationStore;
+    const { UID, logout } = useAuthentication() as PublicAuthenticationStore & PrivateAuthenticationStore;
     if (UID) {
         return <PrivateApp locales={locales} onLogout={logout} />;
     }
-    return <PublicApp locales={locales} onLogin={login} />;
+
+    return <RedirectToOrigin/>;
 };

 export default Setup;
diff --git a/node_modules/proton-shared/lib/apps/helper.ts b/node_modules/proton-shared/lib/apps/helper.ts
index b6913e1..31a52f7 100644
--- a/node_modules/proton-shared/lib/apps/helper.ts
+++ b/node_modules/proton-shared/lib/apps/helper.ts
@@ -32,7 +32,7 @@ export const getAppHrefBundle = (to: string, toApp: APP_NAMES) => {
     return `/${path}`;
 };

-export const getAccountSettingsApp = () => (isSSOMode ? APPS.PROTONACCOUNT : APPS.PROTONMAIL_SETTINGS);
+export const getAccountSettingsApp = () => APPS.PROTONACCOUNT;

 export const getClientID = (appName: APP_NAMES) => {
     return APPS_CONFIGURATION[appName].clientID;
diff --git a/node_modules/proton-shared/lib/constants.ts b/node_modules/proton-shared/lib/constants.ts
index d3b9c6f..e27ed80 100644
--- a/node_modules/proton-shared/lib/constants.ts
+++ b/node_modules/proton-shared/lib/constants.ts
@@ -33,8 +33,8 @@ export const APPS = {
 } as const;
 export const APPS_CONFIGURATION = {
     [APPS.PROTONACCOUNT]: {
-        publicPath: '',
-        subdomain: 'account',
+        publicPath: '/account',
+        subdomain: '',
         name: 'Proton Account',
         clientID: 'WebAccount',
         icon: 'protonaccount',
