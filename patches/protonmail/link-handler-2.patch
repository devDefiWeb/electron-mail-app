diff --git a/packages/components/hooks/useLinkHandler.tsx b/packages/components/hooks/useLinkHandler.tsx
index 7fdec1d3b..256ddf8be 100644
--- a/packages/components/hooks/useLinkHandler.tsx
+++ b/packages/components/hooks/useLinkHandler.tsx
@@ -4,7 +4,7 @@ import punycode from 'punycode.js';
 
 import { getSecondLevelDomain } from '@proton/shared/lib/helpers/url';
 import { MailSettings } from '@proton/shared/lib/interfaces';
-import { isIE11, isEdge } from '@proton/shared/lib/helpers/browser';
+import { isIE11, isEdge, openNewTab } from '@proton/shared/lib/helpers/browser';
 import isTruthy from '@proton/shared/lib/helpers/isTruthy';
 import { PROTON_DOMAINS } from '@proton/shared/lib/constants';
 
@@ -163,6 +163,10 @@ export const useLinkHandler: UseLinkHandler = (
             return;
         }
 
+        event.preventDefault();
+        event.stopPropagation(); // Required for Safari
+        const encodedLink = await encoder(src);
+
         if (
             askForConfirmation &&
             isExternal(src.raw) &&
@@ -170,13 +174,10 @@ export const useLinkHandler: UseLinkHandler = (
                 .filter(isTruthy) // currentDomain can be null
                 .some((domain) => isSubDomain(hostname, domain))
         ) {
-            event.preventDefault();
-            event.stopPropagation(); // Required for Safari
-
-            const link = await encoder(src);
-            setLink(link);
-
+            setLink(encodedLink);
             setLinkConfirmationModalOpen(true);
+        } else {
+            openNewTab(encodedLink);
         }
     });

