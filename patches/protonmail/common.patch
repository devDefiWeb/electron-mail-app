diff --git a/packages/pack/scripts/validate.sh b/packages/pack/scripts/validate.sh
index 1a2ea64..bae388c 100755
--- a/packages/pack/scripts/validate.sh
+++ b/packages/pack/scripts/validate.sh
@@ -58,7 +58,7 @@ function main {
   fi;

   if [ "$hasSourceMap" -eq 0 ]; then
-    hasError=true;
+    #hasError=true;
     echo "[error] no SourceMaps found inside the directory: $OUTPUT_DIR";
   fi;

diff --git a/packages/pack/bin/protonPack.js b/packages/pack/bin/protonPack.js
index 55715b89d..c87879ad4 100755
--- a/packages/pack/bin/protonPack.js
+++ b/packages/pack/bin/protonPack.js
@@ -81,7 +81,7 @@ addGlobalOptions(program.command('build').description('create an optimized produ
         const outputPath = path.resolve('./dist');
         await commandWithLog(`rm -rf ${outputPath}`);
         await commandWithLog(
-            `${require.resolve('webpack-cli/bin/cli.js')} --progress --output-path=${outputPath} ${webpackArgs}`,
+            `${require.resolve('webpack-cli/bin/cli.js')} --output-path=${outputPath} ${webpackArgs}`,
             {
                 stdio: 'inherit',
             }

diff --git a/packages/pack/webpack.config.js b/packages/pack/webpack.config.js
index dbfc3b18d..89807e7dd 100644
--- a/packages/pack/webpack.config.js
+++ b/packages/pack/webpack.config.js
@@ -28,7 +28,20 @@ const getConfig = (env) => {
         },
     };

-    return {
+    return (() => {
+        const file = path.resolve("./proton.config.js");
+        if (require("fs").existsSync(file)) {
+            console.log(
+                /*reset:*/"\x1b[0m" +
+                /*yellow:*/"\x1b[33m" +
+                ">>> " +
+                /*reset:*/"\x1b[0m",
+                `Found ${file}, extend the config`,
+            )
+            return require(file);
+        }
+        return (value) => value;
+    })()({
         target: options.isProduction ? `browserslist:${options.browserslist}` : 'web', // dev-server bug https://github.com/webpack/webpack-dev-server/issues/2812
         mode: options.isProduction ? 'production' : 'development',
         bail: options.isProduction,
@@ -103,7 +116,7 @@ const getConfig = (env) => {
                 },
             }),
         },
-    };
+    });
 };

 module.exports = getConfig;

diff --git a/packages/pack/webpack/css.loader.js b/packages/pack/webpack/css.loader.js
index c50ab972c..a505eb314 100644
--- a/packages/pack/webpack/css.loader.js
+++ b/packages/pack/webpack/css.loader.js
@@ -44,11 +44,13 @@ module.exports = ({ browserslist }) => {
         },
         {
             loader: require.resolve('resolve-url-loader'),
+            options: {sourceMap: false},
         },
         {
             loader: require.resolve('sass-loader'),
             options: {
                 additionalData: PREPEND_SASS,
+                sourceMap: true, // to please "resolve-url-loader"
             },
         },
     ].filter(Boolean);


diff --git a/packages/shared/lib/helpers/browser.ts b/packages/shared/lib/helpers/browser.ts
index 9aaa78a28..f3d24b47c 100644
--- a/packages/shared/lib/helpers/browser.ts
+++ b/packages/shared/lib/helpers/browser.ts
@@ -1,6 +1,21 @@
 import UAParser from 'ua-parser-js';

 const uaParser = new UAParser();
+{
+    const platform = String(navigator.platform);
+    const userAgents = {
+        linux: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36",
+        windows: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36",
+        macos: "Mozilla/5.0 (Macintosh; Intel Mac OS X 12_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36"
+    } as const;
+    uaParser.setUA(
+        platform.startsWith("Linux")
+            ? userAgents.linux
+            : platform.startsWith("Win")
+                ? userAgents.windows
+                : userAgents.macos
+    );
+}
 const ua = uaParser.getResult();

 export const hasModulesSupport = () => {
@@ -89,20 +104,10 @@ export const requireDirectAction = () => isSafari() || isFirefox() || isEdge();
  * @links { https://mathiasbynens.github.io/rel-noopener/}
  */
 export const openNewTab = (url: string) => {
-    if (isIE11()) {
-        const otherWindow = window.open();
-        if (!otherWindow) {
-            return;
-        }
-        otherWindow.opener = null;
-        otherWindow.location.href = url;
-        return;
-    }
-    const anchor = document.createElement('a');
-
-    anchor.setAttribute('rel', 'noreferrer nofollow noopener');
-    anchor.setAttribute('target', '_blank');
-    anchor.href = url;
-
-    return anchor.click();
+    window.dispatchEvent(
+        new CustomEvent(
+            "electron-mail:../../packages/shared/lib/helpers/browser.ts:openNewTab",
+            {detail: {url}},
+        ),
+    );
 };

diff --git a/packages/shared/lib/constants.ts b/packages/shared/lib/constants.ts
index 2bd472b..52cf521 100644
--- a/packages/shared/lib/constants.ts
+++ b/packages/shared/lib/constants.ts
@@ -36,8 +36,8 @@ export const APPS = {
 } as const;
 export const APPS_CONFIGURATION = {
     [APPS.PROTONACCOUNT]: {
-        publicPath: '',
-        subdomain: 'account',
+        publicPath: '/account',
+        subdomain: '',
         name: 'Proton Account',
         bareName: 'Account',
         clientID: 'WebAccount',
@@ -46,7 +46,7 @@ export const APPS_CONFIGURATION = {
     },
     [APPS.PROTONMAIL]: {
         publicPath: '',
-        subdomain: 'mail',
+        subdomain: '',
         name: 'ProtonMail',
         bareName: 'Mail',
         clientID: 'WebMail',
@@ -55,7 +55,7 @@ export const APPS_CONFIGURATION = {
     },
     [APPS.PROTONCONTACTS]: {
         publicPath: '/contacts',
-        subdomain: 'contacts',
+        subdomain: '',
         name: 'ProtonContacts',
         bareName: 'Contacts',
         clientID: 'WebContacts',
@@ -64,7 +64,7 @@ export const APPS_CONFIGURATION = {
     },
     [APPS.PROTONDRIVE]: {
         publicPath: '/drive',
-        subdomain: 'drive',
+        subdomain: '',
         name: 'ProtonDrive',
         bareName: 'Drive',
         clientID: 'WebDrive',
@@ -73,7 +73,7 @@ export const APPS_CONFIGURATION = {
     },
     [APPS.PROTONCALENDAR]: {
         publicPath: '/calendar',
-        subdomain: 'calendar',
+        subdomain: '',
         name: 'ProtonCalendar',
         bareName: 'Calendar',
         clientID: 'WebCalendar',

diff --git a/packages/components/components/link/SettingsLink.tsx b/packages/components/components/link/SettingsLink.tsx
index ebce00d20..96498d8c8 100644
--- a/packages/components/components/link/SettingsLink.tsx
+++ b/packages/components/components/link/SettingsLink.tsx
@@ -37,7 +37,7 @@ const SettingsLink = ({ path, app, children, ...rest }: Props, ref: Ref<HTMLAnch
             ref={ref}
             toApp={APPS.PROTONACCOUNT}
             // If going to settings for the same app
-            target={isGoingToSameSettings ? '_self' : '_blank'}
+            target={isGoingToSameSettings || app === APPS.PROTONVPN_SETTINGS ? '_self' : '_blank'}
             {...rest}
         >
             {children}
