diff --git a/node_modules/mutex-browser/lib/index.js b/node_modules/mutex-browser/lib/index.js
index f69eebf..22c9492 100644
--- a/node_modules/mutex-browser/lib/index.js
+++ b/node_modules/mutex-browser/lib/index.js
@@ -7,8 +7,8 @@ export const create = (options) => {
     const hasIDBPromise = new Promise((resolve) => {
         try {
             const db = indexedDB.open(options && options.dbName || DEFAULT_DB_NAME);
-            db.onerror = () => resolve(true);
-            db.onsuccess = () => resolve(false);
+            db.onerror = () => resolve(false);
+            db.onsuccess = () => resolve(true);
         }
         catch (err) {
             resolve(false);
diff --git a/node_modules/proton-shared/lib/apps/helper.ts b/node_modules/proton-shared/lib/apps/helper.ts
index b6913e1..31a52f7 100644
--- a/node_modules/proton-shared/lib/apps/helper.ts
+++ b/node_modules/proton-shared/lib/apps/helper.ts
@@ -32,7 +32,7 @@ export const getAppHrefBundle = (to: string, toApp: APP_NAMES) => {
     return `/${path}`;
 };

-export const getAccountSettingsApp = () => (isSSOMode ? APPS.PROTONACCOUNT : APPS.PROTONMAIL_SETTINGS);
+export const getAccountSettingsApp = () => APPS.PROTONACCOUNT;

 export const getClientID = (appName: APP_NAMES) => {
     return APPS_CONFIGURATION[appName].clientID;
diff --git a/node_modules/proton-shared/lib/constants.ts b/node_modules/proton-shared/lib/constants.ts
index 579ec9c..a74fb32 100644
--- a/node_modules/proton-shared/lib/constants.ts
+++ b/node_modules/proton-shared/lib/constants.ts
@@ -33,8 +33,8 @@ export const APPS = {
 } as const;
 export const APPS_CONFIGURATION = {
     [APPS.PROTONACCOUNT]: {
-        publicPath: '',
-        subdomain: 'account',
+        publicPath: '/account',
+        subdomain: '',
         name: 'Proton Account',
         clientID: 'WebAccount',
         icon: 'protonaccount',
