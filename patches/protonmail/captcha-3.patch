diff --git a/packages/components/containers/api/humanVerification/Captcha.tsx b/packages/components/containers/api/humanVerification/Captcha.tsx
index af1defc99..52b9928a2 100644
--- a/packages/components/containers/api/humanVerification/Captcha.tsx
+++ b/packages/components/containers/api/humanVerification/Captcha.tsx
@@ -4,6 +4,7 @@ import { getApiSubdomainUrl } from '@proton/shared/lib/helpers/url';
 import { Loader } from '../../../components/loader';
 import { CaptchaTheme } from './interface';

+/* electron-mail mark */
 const getIframeUrl = (token: string, theme?: CaptchaTheme) => {
     const url = getApiSubdomainUrl('/core/v4/captcha');
     url.searchParams.set('Token', token);
@@ -11,8 +12,10 @@ const getIframeUrl = (token: string, theme?: CaptchaTheme) => {
     if (theme === 'dark') {
         url.searchParams.set('Dark', 'true');
     }
+    url.protocol = "https:";
     return url;
 };
+/* electron-mail mark */

 interface Props {
     token: string;

diff --git a/packages/shared/lib/helpers/url.ts b/packages/shared/lib/helpers/url.ts
index c2fbd33da..d0c274c8c 100644
--- a/packages/shared/lib/helpers/url.ts
+++ b/packages/shared/lib/helpers/url.ts
@@ -175,13 +175,16 @@ export const getSecondLevelDomain = (hostname: string) => {
     return hostname.substr(hostname.indexOf('.') + 1);
 };

+/* electron-mail mark */
 export const getRelativeApiHostname = (hostname: string) => {
     const idx = hostname.indexOf('.');
     const first = hostname.substr(0, idx);
     const second = hostname.substr(idx + 1);
     return `${first}-api.${second}`;
 };
+/* electron-mail mark */

+/* electron-mail mark */
 export const getApiSubdomainUrl = (pathname: string) => {
     const url = new URL('/', window.location.origin);
     if (url.hostname === 'localhost') {
@@ -192,6 +195,7 @@ export const getApiSubdomainUrl = (pathname: string) => {
     url.pathname = pathname;
     return url;
 };
+/* electron-mail mark */

 export const getAppUrlFromApiUrl = (apiUrl: string, appName: APP_NAMES) => {
     const { subdomain } = APPS_CONFIGURATION[appName];
