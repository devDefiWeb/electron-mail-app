# https://docs.travis-ci.com/user/customizing-the-build/

branches:
  only:
    - master
language: node_js
node_js: 8
matrix:
  include:
    - os: osx
      osx_image: xcode9.0
    - os: linux
      sudo: required
      dist: trusty
      group: stable
      addons:
        apt:
          packages:
            - gnome-keyring
            - libgnome-keyring-dev
            - libsecret-1-dev
            - python-gnomekeyring
      services:
        - docker
env:
  global:
    - ELECTRON_CACHE=$HOME/.cache/electron
    - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
    - FAILURE_ARCHIVE_FILE=travis-build-id-$TRAVIS_BUILD_ID.tar.gz
cache:
  yarn: true
  directories:
    - node_modules
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder
    - $HOME/.cache/snapcraft
before_install:
  - pip install --user awscli ; export PATH=$PATH:$HOME/.local/bin
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      export DISPLAY=:99.0; sh -e /etc/init.d/xvfb start; sleep 3;
      eval $(echo -n "" | /usr/bin/gnome-keyring-daemon --login);
      eval $(/usr/bin/gnome-keyring-daemon --components=secrets --start);
      dbus-launch /usr/bin/python -c "import gnomekeyring;gnomekeyring.create_sync('login', '');"
    fi
install:
  - node --version
  - yarn --version
  - yarn install
script:
  - yarn run app:dist
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then yarn run electron-builder:release:x64; fi
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      docker run --rm -ti \
        --env-file <(env | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|GH_|GITHUB_|BT_|AWS_|STRIP|BUILD_') \
        --env ELECTRON_CACHE="/root/.cache/electron" \
        --env ELECTRON_BUILDER_CACHE="/root/.cache/electron-builder" \
        -v ${PWD}:/project \
        -v ~/.cache/electron:/root/.cache/electron \
        -v ~/.cache/electron-builder:/root/.cache/electron-builder \
        -v ~/.cache/snapcraft:/root/.cache/snapcraft \
        electronuserland/builder:8 \
        /bin/bash -c "apt-get update && apt-get install libsecret-1-dev -y && yarn run electron-builder:release:x64:linux"
    fi
after_failure:
  - $(git ls-files -o | grep -Fv -e node_modules -e app -e dist >> failure-files.list)
  - tar cvzf $FAILURE_ARCHIVE_FILE $(cat failure-files.list)
  - aws --endpoint=$AWS_ENDPOINT_URL s3 cp $FAILURE_ARCHIVE_FILE s3://$AWS_BUCKET
notifications:
  email:
    on_success: never
    on_failure: change
